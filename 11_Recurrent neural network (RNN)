Step 1: Install Required Libraries
pip install numpy pandas matplotlib scikit-learn tensorflow

Step 2: Load Google Stock Price Dataset
use a .csv file provided by your instructor. Let’s assume it’s named: GOOG.csv.

Step 3: Preprocess the Data
Use the “Close” prices

Normalize with MinMaxScaler

Create sequences for time series

Step 4: Build the RNN Model (LSTM)

Step 5: Train and Evaluate the Model

Step 6: Code

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.preprocessing import MinMaxScaler
import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import SimpleRNN, Dense

# Step 1: Load data
df = pd.read_csv('GOOG.csv')  # Ensure this CSV is in the same directory
df = df[['Close']]            # Use only the 'Close' column

# Step 2: Preprocess data
scaler = MinMaxScaler(feature_range=(0, 1))
scaled_data = scaler.fit_transform(df)

sequence_length = 60
X, y = [], []

for i in range(sequence_length, len(scaled_data)):
    X.append(scaled_data[i-sequence_length:i, 0])
    y.append(scaled_data[i, 0])

X, y = np.array(X), np.array(y)
X = np.reshape(X, (X.shape[0], X.shape[1], 1))  # (samples, timesteps, features)

# Step 3: Split into train/test
split = int(0.8 * len(X))
X_train, X_test = X[:split], X[split:]
y_train, y_test = y[:split], y[split:]

# Step 4: Build RNN model
model = Sequential([
    SimpleRNN(50, return_sequences=False, input_shape=(X_train.shape[1], 1)),
    Dense(1)
])

model.compile(optimizer='adam', loss='mean_squared_error')

# Step 5: Train the model
model.fit(X_train, y_train, epochs=10, batch_size=32)

# Step 6: Make predictions
predicted = model.predict(X_test)
predicted = scaler.inverse_transform(predicted.reshape(-1, 1))
actual = scaler.inverse_transform(y_test.reshape(-1, 1))

# Step 7: Plot the results
plt.plot(actual, label='Actual Google Price')
plt.plot(predicted, label='Predicted Price')
plt.title('Google Stock Price Prediction using RNN')
plt.xlabel('Time')
plt.ylabel('Stock Price')
plt.legend()
plt.show()

Dataset Notes:
Your GOOG.csv should contain at least a 'Date' and 'Close' column.
